//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using UnityEngine;

using System;
using System.Collections;
using System.Collections.Generic;

static public class LinearUnits
{
	/// Common Units
	/// 

	public static string Meters        = "Meters";
	public static string Centimeters   = "Centimeters";
	public static string Kilometers    = "Kilometers";
	public static string Klicks        = "Klicks";
	public static string Inches        = "Inches";
	public static string Feet          = "Feet";
	public static string Yards         = "Yards";
	public static string Miles         = "Miles";
	public static string NauticalMiles = "NauticalMiles";

	public class Conversion
	{
		public string UnitName   { get; set; }
		public string UnitAbbr   { get; set; }
		public float  Factor { get; set; }

		public Conversion() { }

		public Conversion( string name, string abbreviation, float conversion )
		{
			UnitName = name;
			UnitAbbr = abbreviation;
			Factor = conversion;
		}
	}

	private class ConversionCollection : Dictionary<string, Conversion> {}
	private static ConversionCollection Conversions = new ConversionCollection();

	private static string _DefaultUnits = Meters;
	public static string DefaultUnits 
	{ 
		get { return( _DefaultUnits ); }
		set
		{
			if ( !Conversions.ContainsKey(value) )
				throw new ApplicationException("No conversion defined: " + value );
			else 
				_DefaultUnits = value;
		}
	}

	public static string DefaultAbbrev 
	{
		get
		{
			return( Conversions[DefaultUnits].UnitAbbr );
		}
	}

	static LinearUnits()
	{
		AddConversion( Meters,        "m",   1f );
		AddConversion( Centimeters,   "cm",  .01f );
		AddConversion( Kilometers,    "km",   1000f );
		AddConversion( Klicks,        "km",   1000f );
		AddConversion( Inches,        "in.", .0254f );
		AddConversion( Feet,          "ft.", .3048f );
		AddConversion( Yards,         "yd.", .9144f );
		AddConversion( Miles,         "mi.",  1609.34f );
		AddConversion( NauticalMiles, "n.m.", 1852f );
	}

	public static void AddConversion( string unitName, string unitAbbr, float conversion )
	{
		Conversions.Add( unitName, new Conversion( unitName, unitAbbr, conversion ) );
	}

	public static string GetAbbr( string unitName )
	{
		Conversion conversion = Conversions[unitName];
		if ( conversion == null )
			return null;
		else
			return( conversion.UnitAbbr );
	}

	public static float Convert( float value, string fromUnit, string toUnit )
	{
		Conversion from = Conversions[fromUnit];
		Conversion to = Conversions[toUnit];

		if ( from == null )
			throw new ApplicationException("No conversion defined: " + fromUnit );

		if ( to == null )
			throw new ApplicationException("No conversion defined: " + toUnit );

		return( value * from.Factor / to.Factor );
	}

	public static float Convert( float value, string fromUnit )
	{
		return( Convert ( value, fromUnit, DefaultUnits ) );
	}

	public static float Convert( float value )
	{
		return( Convert( value, Meters, DefaultUnits ) );
	}	

	public static Vector3 Convert( Vector3 value )
	{
		return( new Vector3( Convert( value.x ), 
		                     Convert( value.y ), 
		                     Convert( value.z ) ) );
	}
}

