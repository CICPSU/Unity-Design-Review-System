//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Text;
using System.IO;
using System.Xml;
using System.Xml.Serialization;
using System.Collections.Generic;
using UnityEngine;

public static class XmlIO
{
	public static Type[] allTypes
	{
		get
		{
			// need to add all types we want to be able to serialize to the types array
			// this array is used in preference manager so that the menu to add a field/property only displays fields/properties of types that can be serialized
			Type[] types = new Type[]{typeof(Vector3), typeof(Quaternion),typeof(List<int>),typeof(List<float>), typeof(List<string>), typeof(string), typeof(float)};
			return types;
		}
	}

	public static object Load( string path, Type type )
	{
		object thing = null;

		XmlTextReader reader = new XmlTextReader( path );
		XmlSerializer serializer = new  XmlSerializer( type, allTypes);
		thing = serializer.Deserialize( reader );
		reader.Close();

		return( thing );
	}

	public static void Save( object thing, string path )
	{
		XmlTextWriter writer = new XmlTextWriter( path, Encoding.ASCII );
		writer.Formatting = Formatting.Indented;
		XmlSerializer serializer = new XmlSerializer( thing.GetType(), allTypes );
		serializer.Serialize( writer, thing );
		writer.Close();
	}
}


