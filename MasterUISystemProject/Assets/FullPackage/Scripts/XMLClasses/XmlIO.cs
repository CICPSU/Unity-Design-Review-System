//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System.Text;
using System.Xml;
using System.Xml.Serialization;


/// <summary>
/// Static class for reading / writing object instances as XML files.
/// </summary>
public static class XmlIO
{
    /// <summary>
    /// Additional types for Xml serialization
    /// </summary>
	/// 

	public static List<Type> AdditionalTypes { get; private set; }

	static XmlIO()
	{
		AdditionalTypes = new List<Type>();
		AdditionalTypes.Add( typeof(float) );
		AdditionalTypes.Add( typeof(string) );
		AdditionalTypes.Add( typeof(Vector2) );
		AdditionalTypes.Add( typeof(Vector3) );
		AdditionalTypes.Add( typeof(Vector4) );
		AdditionalTypes.Add( typeof(Quaternion) );
	}

    /// <summary>
    /// Create an instance of an object from file.
    /// </summary>
    /// <param name="path">Path to the XML file</param>
    /// <param name="type">Type of object to create</param>
    /// <returns></returns>
	public static object Load( string path, Type type )
	{
		object thing = null;

		//Debug.Log("Loading (" + type.Name + "): " + path);

		XmlTextReader reader = new XmlTextReader( path );
		XmlSerializer serializer = new  XmlSerializer( type, AdditionalTypes.ToArray() );
		thing = serializer.Deserialize( reader );
		reader.Close();

		return( thing );
	}

    /// <summary>
    /// Save an object to an XML file
    /// </summary>
    /// <param name="thing">Object to save to file</param>
    /// <param name="path">Path to the output XML file</param>
	public static void Save( object thing, string path )
	{
		XmlTextWriter writer = new XmlTextWriter( path, Encoding.ASCII );
		writer.Formatting = Formatting.Indented;
		XmlSerializer serializer = new XmlSerializer( thing.GetType(), AdditionalTypes.ToArray());
		serializer.Serialize( writer, thing );
		writer.Close();
	}
}


